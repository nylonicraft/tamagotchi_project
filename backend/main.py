from fastapi import FastAPI
from pydantic import BaseModel
import json
import os

app = FastAPI()

STATE_FILE = "state.json"

class TamagotchiState(BaseModel):
    hunger: int
    happiness: int

def load_state() -> TamagotchiState:
    if not os.path.exists(STATE_FILE):
        # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω, —è–∫—â–æ —Ñ–∞–π–ª –≤—ñ–¥—Å—É—Ç–Ω—ñ–π
        initial_state = TamagotchiState(hunger=50, happiness=50)
        save_state(initial_state)
        return initial_state

    with open(STATE_FILE, "r") as f:
        data = json.load(f)
    return TamagotchiState(**data)

def save_state(state: TamagotchiState):
    with open(STATE_FILE, "w") as f:
        json.dump(state.dict(), f)

@app.post("/feed", summary="–ù–∞–≥–æ–¥—É–≤–∞—Ç–∏ —Ç–∞–º–∞–≥–æ—á—ñ", description="–¶–µ–π –µ–Ω–¥–ø–æ—ñ–Ω—Ç –∑–±—ñ–ª—å—à—É—î —Ä—ñ–≤–µ–Ω—å —Å–∏—Ç–æ—Å—Ç—ñ —Ç–∞–º–∞–≥–æ—á—ñ –Ω–∞ 10 (–º–∞–∫—Å–∏–º—É–º 100).")
def feed():
    state = load_state()
    state.hunger = min(state.hunger + 10, 100)  # –º–∞–∫—Å–∏–º—É–º 100
    save_state(state)
    return {"message": "–¢–∞–º–∞–≥–æ—á—ñ –Ω–∞–≥–æ–¥–æ–≤–∞–Ω–æ!", "state": state}

@app.post("/play", summary="–ü–æ–≥—Ä–∞—Ç–∏ –∑ —Ç–∞–º–∞–≥–æ—á—ñ", description="–¶–µ–π –µ–Ω–¥–ø–æ—ñ–Ω—Ç –∑–±—ñ–ª—å—à—É—î —Ä—ñ–≤–µ–Ω—å —â–∞—Å—Ç—è —Ç–∞–º–∞–≥–æ—á—ñ –Ω–∞ 10 (–º–∞–∫—Å–∏–º—É–º 100).")
def play():
    state = load_state()
    state.happiness = min(state.happiness + 10, 100)
    save_state(state)
    return {"message": "–¢–∞–º–∞–≥–æ—á—ñ –ø–æ–≥—Ä–∞–≤!", "state": state}

@app.get("/status", summary="–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å—Ç–∞–Ω —Ç–∞–º–∞–≥–æ—á—ñ", description="–¶–µ–π –µ–Ω–¥–ø–æ—ñ–Ω—Ç –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω —Å–∏—Ç–æ—Å—Ç—ñ —Ç–∞ —â–∞—Å—Ç—è —Ç–∞–º–∞–≥–æ—á—ñ.")
def status():
    state = load_state()
    return {"state": state}

@app.get("/feelings", summary="–ï–º–æ—Ü—ñ–π–Ω–∏–π —Å—Ç–∞–Ω —Ç–∞–º–∞–≥–æ—á—ñ", description="–¶–µ–π –µ–Ω–¥–ø–æ—ñ–Ω—Ç –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Ä—ñ–≤–Ω—è —Å–∏—Ç–æ—Å—Ç—ñ —Ç–∞ —â–∞—Å—Ç—è –≤–∏–∑–Ω–∞—á–∞—î –µ–º–æ—Ü—ñ–π–Ω–∏–π —Å—Ç–∞–Ω —Ç–∞–º–∞–≥–æ—á—ñ.")
def feelings():
    state = load_state()
    
    if state.hunger < 30:
        return {"emotion": "–Ø –≥–æ–ª–æ–¥–Ω–∏–π! üò¢"}
    if state.happiness < 30:
        return {"emotion": "–ú–µ–Ω—ñ –Ω—É–¥–Ω–æ... üòû"}
    return {"emotion": "–Ø —â–∞—Å–ª–∏–≤–∏–π! üòä"}
